#!/bin/bash

# This builds apsw which contains a duplicity specific
# version of sqlite3 linked statically.  This allows us
# to use the most recent sqlite instead of whatever
# ancient version is in the repo.

set -e -x

ROOTDIR=$(dirname $(realpath -e $0))/..

if [[ ! -e ${ROOTDIR}/apsw ]]; then

    # we build the sdist for apsw/sqlite3 from git/fossil sources.
    # this should only be needed for new versions of duplicity.
    # merely delete the apsw directory and runs 'make ext' to cause
    # this section of code to download the new source.

    mkdir -p ${ROOTDIR}/apsw
    cd ${ROOTDIR}/apsw

    # Grab the latest tag from repo
    APSW=`git ls-remote --tags --sort=v:refname git@github.com:rogerbinns/apsw.git | \
        tail -1 | \
        sed s/'.*\s*refs\/tags\/\(.*-r[0-9]*\).*/\1/g'`

    # remove '-rN' from APSW to get SQLite3 version
    SQLITE3="${APSW:0:${#APSW}-3}"

    # Grab the apsw source code.
    git clone -b ${APSW} --single-branch git@github.com:rogerbinns/apsw.git .
    rm -rf .git

    # Fetch sqlite
    python3 setup.py fetch --sqlite --version=${SQLITE3}
fi

cd ${ROOTDIR}/apsw

# Build the static binary for import

export CFLAGS="-Wno-unused-function \
               -Wno-macro-redefined \
               -Wno-sign-compare \
               -Wno-deprecated-declarations \
               -DSQLITE_TEMP_STORE=3 \
               -DSQLITE_MAX_VARIABLE_NUMBER=250000 \
               -DSQLITE_MAX_ATTACHED=125"

python3 ./setup.py build_ext --force --inplace --enable-all-extensions test

rm -rf ${ROOTDIR}/duplicity/apsw
mv -v apsw ${ROOTDIR}/duplicity

rm -r build
