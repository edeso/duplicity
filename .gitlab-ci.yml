# This file is part of duplicity.
#
# Copyright 2022 Nils Tekampe <nils@tekampe.org>,
# Kenneth Loafman <kenneth@loafman.com>,
# Aaron Whitehouse <code@whitehouse.kiwi.nz>,
# Edgar Soldin <https://soldin.de>
#
# Duplicity is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# Duplicity is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with duplicity; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# include:
#     - template: Dependency-Scanning.gitlab-ci.yml

.test-template: &test-template
    stage: test
    rules:
        - if: $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i || $SKIP_TESTS
          when: never
        - changes:
            - .gitlab-ci.yaml
            - bin/duplicity
            - bin/rdiffdir
            - duplicity/**/*
            - testing/**/*
          when: always
        - when: never

variables:
    # cache local items
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    # Set to non-interactive so no tzdata prompt
    DEBIAN_FRONTEND: "noninteractive"

stages:
    - qual
    - test
    - deploy

default:
    before_script:
        # Set locale to prevent UTF-8 errors
        - export LANG=C.UTF-8
        - export LC_ALL=C.UTF-8
        - apt-get update
        - apt-get install -y 2to3 build-essential git intltool lftp librsync-dev
          libffi-dev libssl-dev openssl par2 rdiff tzdata python3-pip
    interruptible: true

code:
    <<: *test-template
    image: ubuntu:18.04
    stage: qual
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.8 python3.8-dev
        - tox -e code

py27:
    <<: *test-template
    image: ubuntu:16.04
    stage: test
    script:
        - apt-get install -y python2.7 python2.7-dev
        - tox -e py27
    allow_failure: true

py35:
    image: ubuntu:18.04
    <<: *test-template
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.5 python3.5-dev
        - tox -e py35
    allow_failure: true

py36:
    image: ubuntu:18.04
    <<: *test-template
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.6 python3.6-dev
        - tox -e py36
    allow_failure: true

py37:
    <<: *test-template
    image: ubuntu:20.04
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.7 python3.7-dev
        - tox -e py37

py38:
    <<: *test-template
    image: ubuntu:20.04
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.8 python3.8-dev
        - tox -e py38

py39:
    <<: *test-template
    image: ubuntu:20.04
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.9 python3.9-dev
        - tox -e py39

py310:
    <<: *test-template
    image: ubuntu:22.04
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.11 python3.11-dev
        - tox -e py310

py311:
    <<: *test-template
    image: ubuntu:22.04
    stage: test
    script:
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - apt-get install -y python3.11 python3.11-dev
        - tox -e py311

build_pip:
    stage: deploy
    when: manual
    image: ubuntu:20.04
    before_script:
        - apt-get update
        - apt-get install -y git python3-pip git intltool
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - python3 -m pip install twine
    script:
        - ./setup.py sdist --dist-dir=.
    artifacts:
        paths:
            - duplicity-*.tar.gz
        expire_in: 30 days

build_snap:
    stage: deploy
    when: manual
    image: ubuntudesktop/gnome-3-38-2004
    before_script:
        # Set locale to prevent UTF-8 errors
        - export LANG=C.UTF-8
        - export LC_ALL=C.UTF-8
        - export SNAP_ARCH=amd64
        - export SNAPCRAFT_BUILD_INFO=1
        - apt-get update
        - apt-get install -y git python3-pip git intltool squashfs-tools
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
    script:
        - tools/makesnap
        - tools/installsnap
        - tools/testsnap
    artifacts:
        paths:
            - build/duplicity-*/duplicity_*.snap
            - build/duplicity-*/duplicity_*.txt
        expire_in: 30 days

pages:
    stage: deploy
    when: manual
    image: ubuntu:20.04
    before_script:
        # Set locale to prevent UTF-8 errors
        - export LANG=C.UTF-8
        - export LC_ALL=C.UTF-8
    script:
        - apt-get update
        - apt-get install -y git python3-pip git intltool
        - python3 -m pip install --upgrade pip
        - python3 -m pip install -r requirements.txt
        - VERSION=`./setup.py --version`
        - echo "make docs of ${VERSION}"
        - make docs
        - mv docs/_build/html public
    artifacts:
        paths:
            - public

# run a pipeline trigger for the website to build
# - on new tag (always)
# - on new pushes (when online published files were changed)
# - when run manually
# needs WEBSITE_TRIGGER_TOKEN variable in CI settings (mask/protected as needed)
website:
    stage: deploy
    rules:
        - if: $CI_COMMIT_TAG
          when: always
        - changes:
            - "CHANGELOG.md"
            - "README.md"
            - "bin/*.1"
          if: $CI_PIPELINE_SOURCE == "push"
          when: always
        - when: manual
    allow_failure: true
    variables:
        GIT_STRATEGY: none
        GIT_CHECKOUT: "false"
    image: curlimages/curl:latest
    script: |
        curl --fail-with-body -X POST -F token=${WEBSITE_TRIGGER_TOKEN} -F ref=master https://gitlab.com/api/v4/projects/29130748/trigger/pipeline
